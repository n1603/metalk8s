{% import_yaml 'metalk8s/defaults.yaml' as defaults with context %}
{% import_json 'metalk8s/versions.json' as versions with context %}

{# First merge the basic defaults with versions information #}
{% set version_defaults = salt['grains.filter_by'](
  salt['grains.filter_by']({
    'CentOS': {
      7: {
        'kubernetes': versions.kubernetes,
        'repo': {
          'packages': versions.packages.centos['7'],
          'images': versions.images,
        },
      },
      8: {
        'kubernetes': versions.kubernetes,
        'repo': {
          'packages': versions.packages.centos['8'],
          'images': versions.images,
        },
      },
    },
    'RedHat': {
      7: {
        'kubernetes': versions.kubernetes,
        'repo': {
          'packages': versions.packages.redhat['7'],
          'images': versions.images,
        },
      },
      8: {
        'kubernetes': versions.kubernetes,
        'repo': {
          'packages': versions.packages.redhat['8'],
          'images': versions.images,
        },
      },
    },
    'Ubuntu': {
      18: {
        'kubernetes': versions.kubernetes,
        'repo': {
          'packages': versions.packages.ubuntu['18.04'],
          'images': versions.images,
        },
      },
    },
  }, grain='os'),
  grain='osmajorrelease', merge=defaults.get('version_defaults'),
) %}

{% set packages = salt['grains.filter_by'](
  salt['grains.filter_by']({
    'RedHat': {
      7: {},
      8: {
        'python36-pyOpenSSL': 'python3-pyOpenSSL',
        'm2crypto': 'python3-m2crypto',
        'ebtables': 'iptables-ebtables',
        'yum-plugin-versionlock': 'python3-dnf-plugin-versionlock',
      }
    },
    'Debian': {
      18: {
        'iproute': 'iproute2',
        'm2crypto': 'python-m2crypto',
        'python36-pyOpenSSL': 'python3-openssl',
      },
    },
  }, grain='os_family'),
  grain='osmajorrelease',
) %}

{% set defaults = salt['grains.filter_by']({
  'default': defaults,
}, merge=version_defaults) %}

{# Then merge with pillar overrides #}
{% set defaults = salt['grains.filter_by']({
  'default': defaults
}, merge=pillar) %}

{% set metalk8s = salt['grains.filter_by']({
  'default': {}
}, merge=defaults.get('metalk8s')) %}

{% set kubernetes = salt['grains.filter_by']({
  'default': {}
}, merge=defaults.get('kubernetes')) %}

{% set kubeadm_preflight = salt['grains.filter_by']({
  'default': {}
}, merge=defaults.get('kubeadm_preflight')) %}

{% set repo = salt['grains.filter_by'](
  salt['grains.filter_by']({
    'RedHat': {
      7: {
        'containerd': {
          'name': 'epel'
        },
        'kubernetes': {
          'name': 'kubernetes'
        },
        'repositories': {
          'metalk8s-epel': {
            'humanname': 'EPEL',
            'gpgcheck': 1,
            'gpgkeys': [
                'RPM-GPG-KEY-metalk8s-epel-7_1',
            ],
            'repo_gpg_check': 0,
            'enabled': 1,
          },
          'metalk8s-kubernetes': {
            'humanname': 'Kubernetes',
            'gpgcheck': 1,
            'gpgkeys': [
                'RPM-GPG-KEY-metalk8s-kubernetes-7_1',
                'RPM-GPG-KEY-metalk8s-kubernetes-7_2',
            ],
            'repo_gpg_check': 0,
            'enabled': 1,
          },
          'metalk8s-saltstack': {
            'humanname': 'SaltStack',
            'gpgcheck': 1,
            'gpgkeys': [
                'RPM-GPG-KEY-metalk8s-saltstack-7_1',
            ],
            'repo_gpg_check': 0,
            'enabled': 1,
          },
          'metalk8s-scality': {
            'humanname': 'Scality',
            'gpgcheck': 0,
            'gpgkeys': [],
            'repo_gpg_check': 0,
            'enabled': 1,
          },
        }
      },
      8: {
        'containerd': {
          'name': 'epel'
        },
        'kubernetes': {
          'name': 'kubernetes'
        },
        'repositories': {
          'metalk8s-epel': {
            'humanname': 'EPEL',
            'gpgcheck': 1,
            'gpgkeys': [
                'RPM-GPG-KEY-metalk8s-epel-8_1',
            ],
            'repo_gpg_check': 0,
            'enabled': 1,
          },
          'metalk8s-kubernetes': {
            'humanname': 'Kubernetes',
            'gpgcheck': 1,
            'gpgkeys': [
                'RPM-GPG-KEY-metalk8s-kubernetes-8_1',
                'RPM-GPG-KEY-metalk8s-kubernetes-8_2',
            ],
            'repo_gpg_check': 0,
            'enabled': 1,
          },
          'metalk8s-saltstack': {
            'humanname': 'SaltStack',
            'gpgcheck': 1,
            'gpgkeys': [
                'RPM-GPG-KEY-metalk8s-saltstack-8_1',
            ],
            'repo_gpg_check': 0,
            'enabled': 1,
          },
          'metalk8s-scality': {
            'humanname': 'Scality',
            'gpgcheck': 0,
            'gpgkeys': [],
            'repo_gpg_check': 0,
            'enabled': 1,
          },
        }
      },
    },
    'Debian': {
      18: {
        'repositories': {
          'metalk8s-bionic': {
            'type': 'deb',
            'options': {
              'trusted': 'yes',
            },
            'components': [
              'metalk8s-bionic',
            ],
          },
          'metalk8s-bionic-updates': {
            'type': 'deb',
            'options': {
              'trusted': 'yes',
            },
            'components': [
              'metalk8s-bionic-updates',
            ],
          },
          'metalk8s-bionic-backports':{
            'type': 'deb',
            'options': {
              'trusted': 'yes',
            },
            'components': [
              'metalk8s-bionic-backports',
            ],
          },
          'metalk8s-salt_ubuntu1804': {
            'type': 'deb',
            'options': {
              'trusted': 'yes',
            },
            'components': [
              'metalk8s-salt_ubuntu1804',
            ],
          },
          'metalk8s-kubernetes-xenial': {
            'type': 'deb',
            'options': {
              'trusted': 'yes',
            },
            'components': [
              'metalk8s-kubernetes-xenial',
            ],
          },
          'metalk8s-scality': {
            'type': 'deb',
            'options': {
              'trusted': 'yes',
            },
            'components': [
              'metalk8s-scality',
            ],
          }
        }
      }
    }
  }, grain='os_family'),
  grain='osmajorrelease', merge=defaults.get('repo')
) %}

{% set networks = salt['grains.filter_by']({
  'default': {}
}, merge=defaults.get('networks')) %}

{% set runc = salt['grains.filter_by']({
  'default': {}
}, merge=defaults.get('runc')) %}

{% set containerd = salt['grains.filter_by']({
  'default': {}
}, merge=defaults.get('containerd')) %}

{% set kubelet = salt['grains.filter_by']({
  'Debian': {
    'config': {
      'resolvConf': '/run/systemd/resolve/resolv.conf'
    }
  },
  'RedHat': {
    'config': {
      'resolvConf': '/etc/resolv.conf'
    }
  }
}, grain='os_family', merge=defaults.get('kubelet')) %}

{% set ca = salt['grains.filter_by']({
  'default': {}
}, merge=defaults.get('ca')) %}

{% set kube_api = salt['grains.filter_by']({
  'default': {}
}, merge=defaults.get('kube_api')) %}

{% set etcd = salt['grains.filter_by']({
  'default': {}
}, merge=defaults.get('etcd')) %}

{% set front_proxy = salt['grains.filter_by']({
  'default': {}
}, merge=defaults.get('front_proxy')) %}

{% set coredns = salt['grains.filter_by']({
  'default': {}
}, merge=defaults.get('coredns')) %}

{% set kubeadm_kubeconfig = salt['grains.filter_by']({
  'default': {}
}, merge=defaults.get('kubeadm_kubeconfig')) %}

{% set dex = salt['grains.filter_by']({
  'default': {}
}, merge=defaults.get('dex')) %}

{% set nginx_ingress = salt['grains.filter_by']({
  'default': {}
}, merge=defaults.get('nginx-ingress')) %}

{% set proxies = salt['grains.filter_by']({
  'default': {}
}, merge=defaults.get('proxies')) %}

{% set certificates = salt['grains.filter_by']({
  'default': {}
}, merge=defaults.get('certificates')) %}
